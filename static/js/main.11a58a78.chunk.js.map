{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/MovieInputs/MovieInputs.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","MovieInputs","name","value","placeholder","changeStateValue","autoComplete","onChange","NewMovie","state","wasCliked","checkingAllInputs","length","event","target","setState","cleanStateAfterSubmit","submitForm","preventDefault","props","addMovie","checkInputValidation","forceUpdate","method","onSubmit","this","type","disabled","onClick","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11a58a78.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieInputs.scss';\n\nconst MovieInputs = (\n  { name, value, placeholder, changeStateValue, className },\n) => (\n\n  <input\n    className={className ? 'error input' : 'input'}\n    autoComplete=\"off\"\n    name={name}\n    value={value}\n    placeholder={placeholder}\n    onChange={changeStateValue}\n  />\n\n);\n\nMovieInputs.defaultProps = {\n  className: false,\n};\n\nMovieInputs.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  changeStateValue: PropTypes.func.isRequired,\n  className: PropTypes.bool,\n};\n\nexport default MovieInputs;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieInputs from '../MovieInputs/MovieInputs';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    wasCliked: false,\n  };\n\n  componentDidUpdate() {\n    return () => this.forceUpdate();\n  }\n\n  checkingAllInputs = () => {\n    if (this.state.title.length\n        && this.state.imgUrl\n        && this.state.imdbUrl\n        && this.state.imdbId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  changeStateValue = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  cleanStateAfterSubmit = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      wasCliked: false,\n    });\n  }\n\n  submitForm = (event) => {\n    event.preventDefault();\n\n    if (this.checkingAllInputs() !== true) {\n      return;\n    }\n\n    this.props.addMovie(this.state);\n    this.cleanStateAfterSubmit();\n  }\n\n  checkInputValidation = (length) => {\n    if (length === 0 && this.state.wasCliked) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <form\n        method=\"POST\"\n        onSubmit={this.submitForm}\n        className=\"form\"\n      >\n        <MovieInputs\n          className={this.checkInputValidation(this.state.title.length)}\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"Title\"\n          changeStateValue={this.changeStateValue}\n        />\n        {this.checkInputValidation(this.state.title.length)\n          && (\n            <span>\n              Cant be empty\n            </span>\n          )\n            }\n        <MovieInputs\n          name=\"description\"\n          value={this.state.description}\n          placeholder=\"Description\"\n          changeStateValue={this.changeStateValue}\n        />\n        <MovieInputs\n          className={this.checkInputValidation(this.state.title.length)}\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          placeholder=\"imgUrl\"\n          changeStateValue={this.changeStateValue}\n        />\n        {this.checkInputValidation(this.state.imgUrl.length)\n          && (\n            <span>\n              Cant be empty\n            </span>\n          )\n            }\n        <MovieInputs\n          className={this.checkInputValidation(this.state.title.length)}\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          placeholder=\"imdbUrl\"\n          changeStateValue={this.changeStateValue}\n        />\n        {this.checkInputValidation(this.state.imdbUrl.length)\n        && (\n        <span>\n          Cant be empty\n        </span>\n        )\n        }\n        <MovieInputs\n          className={this.checkInputValidation(this.state.title.length)}\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          placeholder=\"imdbId\"\n          changeStateValue={this.changeStateValue}\n        />\n        {this.checkInputValidation(this.state.imdbId.length)\n          && (\n            <span>\n              Cant be empty\n            </span>\n          )\n            }\n        <button\n          className=\"btn\"\n          type=\"submit\"\n          disabled={this.state.wasCliked && !this.checkingAllInputs()}\n          onClick={() => this.setState({ wasCliked: true })}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}